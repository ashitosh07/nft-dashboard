{"ast":null,"code":"const MAGIC_EDEN_API_KEY = process.env.REACT_APP_MAGIC_EDEN_API_KEY;\nconst MAGIC_EDEN_BASE_URL = 'https://api-mainnet.magiceden.dev/v3/rtp/ethereum';\n\n// Magic Eden API service\nexport const magicEdenAPI = {\n  // Get all collections with metadata and statistics\n  async getCollections(limit = 20) {\n    try {\n      const response = await fetch(`${MAGIC_EDEN_BASE_URL}/collections/v7?includeMintStages=false&includeSecurityConfigs=false&normalizeRoyalties=false&useNonFlaggedFloorAsk=false&sortBy=allTimeVolume&limit=${limit}`, {\n        headers: {\n          'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n          'accept': '*/*'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return this.formatCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden Collections API error:', error);\n      return [];\n    }\n  },\n  // Get trending collections\n  async getTrendingCollections(period = '1d', limit = 50) {\n    try {\n      const response = await fetch(`${MAGIC_EDEN_BASE_URL}/collections/trending/v1?period=${period}&limit=${limit}&sortBy=sales&normalizeRoyalties=false&useNonFlaggedFloorAsk=false`, {\n        headers: {\n          'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n          'accept': '*/*'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return this.formatCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden Trending API error:', error);\n      return [];\n    }\n  },\n  // Get user collections (portfolio)\n  async getUserCollections(userAddress, offset = 0, limit = 20) {\n    try {\n      const response = await fetch(`${MAGIC_EDEN_BASE_URL}/users/${userAddress}/collections/v3?includeTopBid=false&includeLiquidCount=false&offset=${offset}&limit=${limit}`, {\n        headers: {\n          'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n          'accept': '*/*'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return this.formatUserCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden User Collections API error:', error);\n      return [];\n    }\n  },\n  // Format collections data for consistent structure\n  formatCollections(collections) {\n    return collections.map(collection => {\n      var _collection$sampleIma, _collection$floorAsk, _collection$floorAsk$, _collection$floorAsk$2, _collection$volume, _collection$volume2, _collection$volume3, _collection$floorSale, _collection$floorSale2, _collection$royalties, _collection$salesCoun, _collection$salesCoun2;\n      return {\n        id: collection.id,\n        name: collection.name || 'Unknown Collection',\n        symbol: collection.symbol || 'N/A',\n        image: collection.image || ((_collection$sampleIma = collection.sampleImages) === null || _collection$sampleIma === void 0 ? void 0 : _collection$sampleIma[0]) || 'https://via.placeholder.com/400x200/6366f1/ffffff?text=NFT',\n        floorPrice: ((_collection$floorAsk = collection.floorAsk) === null || _collection$floorAsk === void 0 ? void 0 : (_collection$floorAsk$ = _collection$floorAsk.price) === null || _collection$floorAsk$ === void 0 ? void 0 : (_collection$floorAsk$2 = _collection$floorAsk$.amount) === null || _collection$floorAsk$2 === void 0 ? void 0 : _collection$floorAsk$2.decimal) || 0,\n        volume24h: ((_collection$volume = collection.volume) === null || _collection$volume === void 0 ? void 0 : _collection$volume['1day']) || 0,\n        volume7d: ((_collection$volume2 = collection.volume) === null || _collection$volume2 === void 0 ? void 0 : _collection$volume2['7day']) || 0,\n        volumeAllTime: ((_collection$volume3 = collection.volume) === null || _collection$volume3 === void 0 ? void 0 : _collection$volume3.allTime) || 0,\n        owners: collection.ownerCount || 0,\n        totalSupply: collection.tokenCount || 0,\n        change24h: ((_collection$floorSale = collection.floorSaleChange) === null || _collection$floorSale === void 0 ? void 0 : _collection$floorSale['1day']) || 0,\n        change7d: ((_collection$floorSale2 = collection.floorSaleChange) === null || _collection$floorSale2 === void 0 ? void 0 : _collection$floorSale2['7day']) || 0,\n        description: collection.description || 'NFT Collection',\n        contractAddress: collection.primaryContract,\n        createdAt: collection.createdAt,\n        royalties: ((_collection$royalties = collection.royalties) === null || _collection$royalties === void 0 ? void 0 : _collection$royalties.bps) || 0,\n        sales24h: ((_collection$salesCoun = collection.salesCount) === null || _collection$salesCoun === void 0 ? void 0 : _collection$salesCoun['1day']) || 0,\n        sales7d: ((_collection$salesCoun2 = collection.salesCount) === null || _collection$salesCoun2 === void 0 ? void 0 : _collection$salesCoun2['7day']) || 0,\n        marketCap: collection.marketCap || 0,\n        verified: collection.isVerified || false\n      };\n    });\n  },\n  // Format user collections for portfolio view\n  formatUserCollections(collections) {\n    return collections.map(collection => ({\n      ...this.formatCollections([collection.collection])[0],\n      ownedCount: collection.tokenCount || 0,\n      floorValue: collection.floorAskValue || 0,\n      totalValue: collection.totalValue || 0\n    }));\n  }\n};\n\n// ETH Price API\nexport const ethPriceAPI = {\n  async getETHPrice() {\n    try {\n      var _data$ethereum;\n      const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\n      const data = await response.json();\n      return ((_data$ethereum = data.ethereum) === null || _data$ethereum === void 0 ? void 0 : _data$ethereum.usd) || 0;\n    } catch (error) {\n      console.error('ETH Price API error:', error);\n      return 0;\n    }\n  }\n};\n\n// Fallback collections for when API fails\nexport const fallbackCollections = [{\n  id: 'fallback-1',\n  name: 'Sample Collection',\n  symbol: 'SAMPLE',\n  image: 'https://via.placeholder.com/400x200/6366f1/ffffff?text=NFT+Collection',\n  floorPrice: 1.5,\n  volume24h: 150.5,\n  owners: 2500,\n  totalSupply: 10000,\n  change24h: 5.2,\n  description: 'Sample NFT Collection'\n}];","map":{"version":3,"names":["MAGIC_EDEN_API_KEY","process","env","REACT_APP_MAGIC_EDEN_API_KEY","MAGIC_EDEN_BASE_URL","magicEdenAPI","getCollections","limit","response","fetch","headers","ok","Error","status","data","json","formatCollections","collections","error","console","getTrendingCollections","period","getUserCollections","userAddress","offset","formatUserCollections","map","collection","_collection$sampleIma","_collection$floorAsk","_collection$floorAsk$","_collection$floorAsk$2","_collection$volume","_collection$volume2","_collection$volume3","_collection$floorSale","_collection$floorSale2","_collection$royalties","_collection$salesCoun","_collection$salesCoun2","id","name","symbol","image","sampleImages","floorPrice","floorAsk","price","amount","decimal","volume24h","volume","volume7d","volumeAllTime","allTime","owners","ownerCount","totalSupply","tokenCount","change24h","floorSaleChange","change7d","description","contractAddress","primaryContract","createdAt","royalties","bps","sales24h","salesCount","sales7d","marketCap","verified","isVerified","ownedCount","floorValue","floorAskValue","totalValue","ethPriceAPI","getETHPrice","_data$ethereum","ethereum","usd","fallbackCollections"],"sources":["C:/Personal/nft-dashboard/src/services/apiService.js"],"sourcesContent":["const MAGIC_EDEN_API_KEY = process.env.REACT_APP_MAGIC_EDEN_API_KEY;\nconst MAGIC_EDEN_BASE_URL = 'https://api-mainnet.magiceden.dev/v3/rtp/ethereum';\n\n// Magic Eden API service\nexport const magicEdenAPI = {\n  // Get all collections with metadata and statistics\n  async getCollections(limit = 20) {\n    try {\n      const response = await fetch(\n        `${MAGIC_EDEN_BASE_URL}/collections/v7?includeMintStages=false&includeSecurityConfigs=false&normalizeRoyalties=false&useNonFlaggedFloorAsk=false&sortBy=allTimeVolume&limit=${limit}`,\n        {\n          headers: {\n            'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n            'accept': '*/*'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return this.formatCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden Collections API error:', error);\n      return [];\n    }\n  },\n\n  // Get trending collections\n  async getTrendingCollections(period = '1d', limit = 50) {\n    try {\n      const response = await fetch(\n        `${MAGIC_EDEN_BASE_URL}/collections/trending/v1?period=${period}&limit=${limit}&sortBy=sales&normalizeRoyalties=false&useNonFlaggedFloorAsk=false`,\n        {\n          headers: {\n            'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n            'accept': '*/*'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return this.formatCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden Trending API error:', error);\n      return [];\n    }\n  },\n\n  // Get user collections (portfolio)\n  async getUserCollections(userAddress, offset = 0, limit = 20) {\n    try {\n      const response = await fetch(\n        `${MAGIC_EDEN_BASE_URL}/users/${userAddress}/collections/v3?includeTopBid=false&includeLiquidCount=false&offset=${offset}&limit=${limit}`,\n        {\n          headers: {\n            'Authorization': `Bearer ${MAGIC_EDEN_API_KEY}`,\n            'accept': '*/*'\n          }\n        }\n      );\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return this.formatUserCollections(data.collections || []);\n    } catch (error) {\n      console.error('Magic Eden User Collections API error:', error);\n      return [];\n    }\n  },\n\n  // Format collections data for consistent structure\n  formatCollections(collections) {\n    return collections.map(collection => ({\n      id: collection.id,\n      name: collection.name || 'Unknown Collection',\n      symbol: collection.symbol || 'N/A',\n      image: collection.image || collection.sampleImages?.[0] || 'https://via.placeholder.com/400x200/6366f1/ffffff?text=NFT',\n      floorPrice: collection.floorAsk?.price?.amount?.decimal || 0,\n      volume24h: collection.volume?.['1day'] || 0,\n      volume7d: collection.volume?.['7day'] || 0,\n      volumeAllTime: collection.volume?.allTime || 0,\n      owners: collection.ownerCount || 0,\n      totalSupply: collection.tokenCount || 0,\n      change24h: collection.floorSaleChange?.['1day'] || 0,\n      change7d: collection.floorSaleChange?.['7day'] || 0,\n      description: collection.description || 'NFT Collection',\n      contractAddress: collection.primaryContract,\n      createdAt: collection.createdAt,\n      royalties: collection.royalties?.bps || 0,\n      sales24h: collection.salesCount?.['1day'] || 0,\n      sales7d: collection.salesCount?.['7day'] || 0,\n      marketCap: collection.marketCap || 0,\n      verified: collection.isVerified || false\n    }));\n  },\n\n  // Format user collections for portfolio view\n  formatUserCollections(collections) {\n    return collections.map(collection => ({\n      ...this.formatCollections([collection.collection])[0],\n      ownedCount: collection.tokenCount || 0,\n      floorValue: collection.floorAskValue || 0,\n      totalValue: collection.totalValue || 0\n    }));\n  }\n};\n\n// ETH Price API\nexport const ethPriceAPI = {\n  async getETHPrice() {\n    try {\n      const response = await fetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd');\n      const data = await response.json();\n      return data.ethereum?.usd || 0;\n    } catch (error) {\n      console.error('ETH Price API error:', error);\n      return 0;\n    }\n  }\n};\n\n// Fallback collections for when API fails\nexport const fallbackCollections = [\n  {\n    id: 'fallback-1',\n    name: 'Sample Collection',\n    symbol: 'SAMPLE',\n    image: 'https://via.placeholder.com/400x200/6366f1/ffffff?text=NFT+Collection',\n    floorPrice: 1.5,\n    volume24h: 150.5,\n    owners: 2500,\n    totalSupply: 10000,\n    change24h: 5.2,\n    description: 'Sample NFT Collection'\n  }\n];"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}