{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport { magicEdenAPI, ethPriceAPI } from '../services/apiService';\nexport const useNFTData = () => {\n  _s();\n  const [collections, setCollections] = useState([]);\n  const [trendingCollections, setTrendingCollections] = useState([]);\n  const [userPortfolio, setUserPortfolio] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [ethPrice, setEthPrice] = useState(0);\n  const [userAddress, setUserAddress] = useState('');\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [hasPrevPage, setHasPrevPage] = useState(false);\n  const [continuation, setContinuation] = useState(null);\n\n  // Search states\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n  const ITEMS_PER_PAGE = 20;\n  const fetchCollections = useCallback(async (page = 1, sortBy = 'allTimeVolume') => {\n    setLoading(true);\n    setError(null);\n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const collectionsData = await magicEdenAPI.getCollections(ITEMS_PER_PAGE, offset, sortBy);\n      if (collectionsData && collectionsData.collections) {\n        setCollections(collectionsData.collections);\n        setHasNextPage(!!collectionsData.continuation);\n        setHasPrevPage(page > 1);\n        setContinuation(collectionsData.continuation);\n        setCurrentPage(page);\n        // Estimate total pages (Magic Eden doesn't provide total count)\n        setTotalPages(page + (collectionsData.continuation ? 10 : 0));\n      } else {\n        setCollections([]);\n        setError('No collections found');\n      }\n      setLastUpdated(new Date());\n    } catch (err) {\n      console.error('Error fetching collections:', err);\n      setError('Failed to fetch NFT data');\n      setCollections([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [ITEMS_PER_PAGE]);\n  const fetchTrendingCollections = useCallback(async (page = 1) => {\n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const trendingData = await magicEdenAPI.getTrendingCollections('1d', ITEMS_PER_PAGE, offset);\n      if (trendingData && trendingData.collections) {\n        setTrendingCollections(trendingData.collections);\n      }\n    } catch (err) {\n      console.error('Error fetching trending collections:', err);\n    }\n  }, [ITEMS_PER_PAGE]);\n  const searchCollections = useCallback(async (query, page = 1) => {\n    if (!query.trim()) {\n      setIsSearchMode(false);\n      fetchCollections(1);\n      return;\n    }\n    setSearchLoading(true);\n    setIsSearchMode(true);\n    setError(null);\n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const searchData = await magicEdenAPI.searchCollections(query, ITEMS_PER_PAGE, offset);\n      if (searchData && searchData.collections) {\n        setCollections(searchData.collections);\n        setHasNextPage(!!searchData.continuation);\n        setHasPrevPage(page > 1);\n        setContinuation(searchData.continuation);\n        setCurrentPage(page);\n        setTotalPages(page + (searchData.continuation ? 10 : 0));\n      } else {\n        setCollections([]);\n        setError('No collections found for your search');\n      }\n    } catch (err) {\n      console.error('Error searching collections:', err);\n      setError('Search failed');\n      setCollections([]);\n    } finally {\n      setSearchLoading(false);\n    }\n  }, [ITEMS_PER_PAGE, fetchCollections]);\n  const fetchETHPrice = useCallback(async () => {\n    try {\n      const price = await ethPriceAPI.getETHPrice();\n      setEthPrice(price);\n    } catch (err) {\n      console.error('Error fetching ETH price:', err);\n    }\n  }, []);\n  const fetchUserPortfolio = useCallback(async address => {\n    if (!address) return;\n    try {\n      const portfolio = await magicEdenAPI.getUserCollections(address);\n      setUserPortfolio(portfolio);\n    } catch (err) {\n      console.error('Error fetching user portfolio:', err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchCollections(1);\n    fetchTrendingCollections(1);\n    fetchETHPrice();\n  }, [fetchCollections, fetchTrendingCollections, fetchETHPrice]);\n  useEffect(() => {\n    if (userAddress) {\n      fetchUserPortfolio(userAddress);\n    }\n  }, [userAddress, fetchUserPortfolio]);\n  const refreshData = useCallback(() => {\n    if (isSearchMode && searchQuery) {\n      searchCollections(searchQuery, 1);\n    } else {\n      fetchCollections(1);\n    }\n    fetchTrendingCollections(1);\n    fetchETHPrice();\n    if (userAddress) {\n      fetchUserPortfolio(userAddress);\n    }\n  }, [fetchCollections, fetchTrendingCollections, fetchETHPrice, fetchUserPortfolio, userAddress, isSearchMode, searchQuery, searchCollections]);\n  const handlePageChange = useCallback(page => {\n    if (isSearchMode && searchQuery) {\n      searchCollections(searchQuery, page);\n    } else {\n      fetchCollections(page);\n    }\n  }, [isSearchMode, searchQuery, searchCollections, fetchCollections]);\n  const handleSearch = useCallback(query => {\n    setSearchQuery(query);\n    searchCollections(query, 1);\n  }, [searchCollections]);\n  const clearSearch = useCallback(() => {\n    setSearchQuery('');\n    setIsSearchMode(false);\n    fetchCollections(1);\n  }, [fetchCollections]);\n  return {\n    collections,\n    trendingCollections,\n    userPortfolio,\n    loading,\n    searchLoading,\n    error,\n    ethPrice,\n    lastUpdated,\n    currentPage,\n    totalPages,\n    hasNextPage,\n    hasPrevPage,\n    searchQuery,\n    isSearchMode,\n    refreshData,\n    setUserAddress,\n    handlePageChange,\n    handleSearch,\n    clearSearch,\n    fetchTrendingCollections\n  };\n};\n_s(useNFTData, \"LYO4LIQAAgmbtDdfefAuy3FNFQc=\");","map":{"version":3,"names":["useState","useEffect","useCallback","magicEdenAPI","ethPriceAPI","useNFTData","_s","collections","setCollections","trendingCollections","setTrendingCollections","userPortfolio","setUserPortfolio","loading","setLoading","searchLoading","setSearchLoading","error","setError","ethPrice","setEthPrice","userAddress","setUserAddress","lastUpdated","setLastUpdated","currentPage","setCurrentPage","totalPages","setTotalPages","hasNextPage","setHasNextPage","hasPrevPage","setHasPrevPage","continuation","setContinuation","searchQuery","setSearchQuery","isSearchMode","setIsSearchMode","ITEMS_PER_PAGE","fetchCollections","page","sortBy","offset","collectionsData","getCollections","Date","err","console","fetchTrendingCollections","trendingData","getTrendingCollections","searchCollections","query","trim","searchData","fetchETHPrice","price","getETHPrice","fetchUserPortfolio","address","portfolio","getUserCollections","refreshData","handlePageChange","handleSearch","clearSearch"],"sources":["C:/Personal/nft-dashboard/src/hooks/useNFTData.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { magicEdenAPI, ethPriceAPI } from '../services/apiService';\n\nexport const useNFTData = () => {\n  const [collections, setCollections] = useState([]);\n  const [trendingCollections, setTrendingCollections] = useState([]);\n  const [userPortfolio, setUserPortfolio] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [ethPrice, setEthPrice] = useState(0);\n  const [userAddress, setUserAddress] = useState('');\n  const [lastUpdated, setLastUpdated] = useState(null);\n  \n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(false);\n  const [hasPrevPage, setHasPrevPage] = useState(false);\n  const [continuation, setContinuation] = useState(null);\n  \n  // Search states\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearchMode, setIsSearchMode] = useState(false);\n  \n  const ITEMS_PER_PAGE = 20;\n\n  const fetchCollections = useCallback(async (page = 1, sortBy = 'allTimeVolume') => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const collectionsData = await magicEdenAPI.getCollections(ITEMS_PER_PAGE, offset, sortBy);\n      \n      if (collectionsData && collectionsData.collections) {\n        setCollections(collectionsData.collections);\n        setHasNextPage(!!collectionsData.continuation);\n        setHasPrevPage(page > 1);\n        setContinuation(collectionsData.continuation);\n        setCurrentPage(page);\n        // Estimate total pages (Magic Eden doesn't provide total count)\n        setTotalPages(page + (collectionsData.continuation ? 10 : 0));\n      } else {\n        setCollections([]);\n        setError('No collections found');\n      }\n      \n      setLastUpdated(new Date());\n    } catch (err) {\n      console.error('Error fetching collections:', err);\n      setError('Failed to fetch NFT data');\n      setCollections([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [ITEMS_PER_PAGE]);\n\n  const fetchTrendingCollections = useCallback(async (page = 1) => {\n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const trendingData = await magicEdenAPI.getTrendingCollections('1d', ITEMS_PER_PAGE, offset);\n      \n      if (trendingData && trendingData.collections) {\n        setTrendingCollections(trendingData.collections);\n      }\n    } catch (err) {\n      console.error('Error fetching trending collections:', err);\n    }\n  }, [ITEMS_PER_PAGE]);\n\n  const searchCollections = useCallback(async (query, page = 1) => {\n    if (!query.trim()) {\n      setIsSearchMode(false);\n      fetchCollections(1);\n      return;\n    }\n\n    setSearchLoading(true);\n    setIsSearchMode(true);\n    setError(null);\n    \n    try {\n      const offset = (page - 1) * ITEMS_PER_PAGE;\n      const searchData = await magicEdenAPI.searchCollections(query, ITEMS_PER_PAGE, offset);\n      \n      if (searchData && searchData.collections) {\n        setCollections(searchData.collections);\n        setHasNextPage(!!searchData.continuation);\n        setHasPrevPage(page > 1);\n        setContinuation(searchData.continuation);\n        setCurrentPage(page);\n        setTotalPages(page + (searchData.continuation ? 10 : 0));\n      } else {\n        setCollections([]);\n        setError('No collections found for your search');\n      }\n    } catch (err) {\n      console.error('Error searching collections:', err);\n      setError('Search failed');\n      setCollections([]);\n    } finally {\n      setSearchLoading(false);\n    }\n  }, [ITEMS_PER_PAGE, fetchCollections]);\n\n  const fetchETHPrice = useCallback(async () => {\n    try {\n      const price = await ethPriceAPI.getETHPrice();\n      setEthPrice(price);\n    } catch (err) {\n      console.error('Error fetching ETH price:', err);\n    }\n  }, []);\n\n  const fetchUserPortfolio = useCallback(async (address) => {\n    if (!address) return;\n    \n    try {\n      const portfolio = await magicEdenAPI.getUserCollections(address);\n      setUserPortfolio(portfolio);\n    } catch (err) {\n      console.error('Error fetching user portfolio:', err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchCollections(1);\n    fetchTrendingCollections(1);\n    fetchETHPrice();\n  }, [fetchCollections, fetchTrendingCollections, fetchETHPrice]);\n\n  useEffect(() => {\n    if (userAddress) {\n      fetchUserPortfolio(userAddress);\n    }\n  }, [userAddress, fetchUserPortfolio]);\n\n  const refreshData = useCallback(() => {\n    if (isSearchMode && searchQuery) {\n      searchCollections(searchQuery, 1);\n    } else {\n      fetchCollections(1);\n    }\n    fetchTrendingCollections(1);\n    fetchETHPrice();\n    if (userAddress) {\n      fetchUserPortfolio(userAddress);\n    }\n  }, [fetchCollections, fetchTrendingCollections, fetchETHPrice, fetchUserPortfolio, userAddress, isSearchMode, searchQuery, searchCollections]);\n\n  const handlePageChange = useCallback((page) => {\n    if (isSearchMode && searchQuery) {\n      searchCollections(searchQuery, page);\n    } else {\n      fetchCollections(page);\n    }\n  }, [isSearchMode, searchQuery, searchCollections, fetchCollections]);\n\n  const handleSearch = useCallback((query) => {\n    setSearchQuery(query);\n    searchCollections(query, 1);\n  }, [searchCollections]);\n\n  const clearSearch = useCallback(() => {\n    setSearchQuery('');\n    setIsSearchMode(false);\n    fetchCollections(1);\n  }, [fetchCollections]);\n\n  return {\n    collections,\n    trendingCollections,\n    userPortfolio,\n    loading,\n    searchLoading,\n    error,\n    ethPrice,\n    lastUpdated,\n    currentPage,\n    totalPages,\n    hasNextPage,\n    hasPrevPage,\n    searchQuery,\n    isSearchMode,\n    refreshData,\n    setUserAddress,\n    handlePageChange,\n    handleSearch,\n    clearSearch,\n    fetchTrendingCollections\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}