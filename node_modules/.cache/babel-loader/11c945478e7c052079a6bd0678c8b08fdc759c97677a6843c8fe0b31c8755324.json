{"ast":null,"code":"// Monad blockchain configuration\nconst MONAD_RPC_URL = process.env.REACT_APP_MONAD_RPC_URL || 'https://rpc.monad.xyz';\nconst MONAD_EXPLORER_URL = 'https://explorer.monad.xyz';\n\n// Monad NFT collections data with real-time simulation\nconst monadCollections = [{\n  id: 'monad-monks',\n  name: 'Monad Monks',\n  symbol: 'MONKS',\n  image: 'https://picsum.photos/id/1011/400/200',\n  baseFloorPrice: 2500,\n  baseVolume24h: 45000,\n  owners: 3247,\n  totalSupply: 5000,\n  description: 'Sacred guardians of the Monad blockchain ecosystem',\n  contractAddress: '0x1234...monks',\n  createdAt: '2024-01-15',\n  royalties: 500\n}, {\n  id: 'monad-portals',\n  name: 'Monad Portals',\n  symbol: 'PORTALS',\n  image: 'https://picsum.photos/id/1015/400/200',\n  baseFloorPrice: 1800,\n  baseVolume24h: 32000,\n  owners: 2156,\n  totalSupply: 3333,\n  description: 'Interdimensional gateways powered by Monad\\'s speed',\n  contractAddress: '0x5678...portals',\n  createdAt: '2024-02-01',\n  royalties: 750\n}, {\n  id: 'monad-crystals',\n  name: 'Monad Crystals',\n  symbol: 'CRYSTALS',\n  image: 'https://picsum.photos/id/1025/400/200',\n  baseFloorPrice: 950,\n  baseVolume24h: 28500,\n  owners: 4892,\n  totalSupply: 8888,\n  description: 'Energy cores that fuel the Monad metaverse',\n  contractAddress: '0x9abc...crystals',\n  createdAt: '2024-01-20',\n  royalties: 250\n}, {\n  id: 'monad-mechs',\n  name: 'Monad Mechs',\n  symbol: 'MECHS',\n  image: 'https://picsum.photos/id/180/400/200',\n  baseFloorPrice: 3200,\n  baseVolume24h: 67000,\n  owners: 1834,\n  totalSupply: 2500,\n  description: 'Elite battle machines defending Monad space',\n  contractAddress: '0xdef0...mechs',\n  createdAt: '2024-02-10',\n  royalties: 1000\n}, {\n  id: 'monad-spirits',\n  name: 'Monad Spirits',\n  symbol: 'SPIRITS',\n  image: 'https://picsum.photos/id/1027/400/200',\n  baseFloorPrice: 750,\n  baseVolume24h: 19800,\n  owners: 6234,\n  totalSupply: 10000,\n  description: 'Ethereal beings native to the Monad dimension',\n  contractAddress: '0x1357...spirits',\n  createdAt: '2024-01-05',\n  royalties: 300\n}, {\n  id: 'monad-genesis',\n  name: 'Monad Genesis',\n  symbol: 'GENESIS',\n  image: 'https://picsum.photos/id/1041/400/200',\n  baseFloorPrice: 5500,\n  baseVolume24h: 89000,\n  owners: 999,\n  totalSupply: 1000,\n  description: 'The original founders collection on Monad',\n  contractAddress: '0x2468...genesis',\n  createdAt: '2024-01-01',\n  royalties: 500\n}];\n\n// Simulate real-time price fluctuations\nconst simulateRealTimeData = collection => {\n  const timeVariation = Math.sin(Date.now() / 100000) * 0.1;\n  const randomVariation = (Math.random() - 0.5) * 0.2;\n  const totalVariation = timeVariation + randomVariation;\n  return {\n    ...collection,\n    floorPrice: Math.max(collection.baseFloorPrice * (1 + totalVariation), collection.baseFloorPrice * 0.5),\n    volume24h: Math.max(collection.baseVolume24h * (1 + totalVariation * 0.5), 0),\n    change24h: totalVariation * 100\n  };\n};\n\n// Monad API service\nexport const monadAPI = {\n  async getCollections() {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    try {\n      return {\n        collections: monadCollections.map(simulateRealTimeData),\n        success: true\n      };\n    } catch (error) {\n      console.error('Monad API error:', error);\n      return {\n        collections: monadCollections,\n        success: false\n      };\n    }\n  },\n  async getMonadPrice() {\n    // Simulate MON token price with realistic fluctuation\n    const basePrice = 12.50;\n    const variation = Math.sin(Date.now() / 200000) * 2 + (Math.random() - 0.5) * 1;\n    return Math.max(basePrice + variation, 8);\n  },\n  async getCollectionActivity(collectionId) {\n    // Simulate recent activity\n    await new Promise(resolve => setTimeout(resolve, 500));\n    const activities = [];\n    for (let i = 0; i < 10; i++) {\n      const types = ['sale', 'transfer', 'listing'];\n      const type = types[Math.floor(Math.random() * types.length)];\n      activities.push({\n        id: `activity-${i}`,\n        type,\n        price: type === 'sale' ? {\n          amount: {\n            decimal: (Math.random() * 5000 + 500).toFixed(0)\n          }\n        } : null,\n        timestamp: new Date(Date.now() - Math.random() * 86400000).toISOString(),\n        from: `0x${Math.random().toString(16).substr(2, 8)}`,\n        to: `0x${Math.random().toString(16).substr(2, 8)}`\n      });\n    }\n    return {\n      activities\n    };\n  },\n  async getNetworkStats() {\n    return {\n      blockHeight: 1234567 + Math.floor(Date.now() / 1000),\n      tps: 10000 + Math.floor(Math.random() * 2000),\n      gasPrice: 0.001,\n      activeValidators: 100\n    };\n  }\n};\nexport { monadCollections as fallbackCollections };","map":{"version":3,"names":["MONAD_RPC_URL","process","env","REACT_APP_MONAD_RPC_URL","MONAD_EXPLORER_URL","monadCollections","id","name","symbol","image","baseFloorPrice","baseVolume24h","owners","totalSupply","description","contractAddress","createdAt","royalties","simulateRealTimeData","collection","timeVariation","Math","sin","Date","now","randomVariation","random","totalVariation","floorPrice","max","volume24h","change24h","monadAPI","getCollections","Promise","resolve","setTimeout","collections","map","success","error","console","getMonadPrice","basePrice","variation","getCollectionActivity","collectionId","activities","i","types","type","floor","length","push","price","amount","decimal","toFixed","timestamp","toISOString","from","toString","substr","to","getNetworkStats","blockHeight","tps","gasPrice","activeValidators","fallbackCollections"],"sources":["C:/Personal/nft-dashboard/src/services/apiService.js"],"sourcesContent":["// Monad blockchain configuration\nconst MONAD_RPC_URL = process.env.REACT_APP_MONAD_RPC_URL || 'https://rpc.monad.xyz';\nconst MONAD_EXPLORER_URL = 'https://explorer.monad.xyz';\n\n// Monad NFT collections data with real-time simulation\nconst monadCollections = [\n  {\n    id: 'monad-monks',\n    name: 'Monad Monks',\n    symbol: 'MONKS',\n    image: 'https://picsum.photos/id/1011/400/200',\n    baseFloorPrice: 2500,\n    baseVolume24h: 45000,\n    owners: 3247,\n    totalSupply: 5000,\n    description: 'Sacred guardians of the Monad blockchain ecosystem',\n    contractAddress: '0x1234...monks',\n    createdAt: '2024-01-15',\n    royalties: 500\n  },\n  {\n    id: 'monad-portals',\n    name: 'Monad Portals',\n    symbol: 'PORTALS',\n    image: 'https://picsum.photos/id/1015/400/200',\n    baseFloorPrice: 1800,\n    baseVolume24h: 32000,\n    owners: 2156,\n    totalSupply: 3333,\n    description: 'Interdimensional gateways powered by Monad\\'s speed',\n    contractAddress: '0x5678...portals',\n    createdAt: '2024-02-01',\n    royalties: 750\n  },\n  {\n    id: 'monad-crystals',\n    name: 'Monad Crystals',\n    symbol: 'CRYSTALS',\n    image: 'https://picsum.photos/id/1025/400/200',\n    baseFloorPrice: 950,\n    baseVolume24h: 28500,\n    owners: 4892,\n    totalSupply: 8888,\n    description: 'Energy cores that fuel the Monad metaverse',\n    contractAddress: '0x9abc...crystals',\n    createdAt: '2024-01-20',\n    royalties: 250\n  },\n  {\n    id: 'monad-mechs',\n    name: 'Monad Mechs',\n    symbol: 'MECHS',\n    image: 'https://picsum.photos/id/180/400/200',\n    baseFloorPrice: 3200,\n    baseVolume24h: 67000,\n    owners: 1834,\n    totalSupply: 2500,\n    description: 'Elite battle machines defending Monad space',\n    contractAddress: '0xdef0...mechs',\n    createdAt: '2024-02-10',\n    royalties: 1000\n  },\n  {\n    id: 'monad-spirits',\n    name: 'Monad Spirits',\n    symbol: 'SPIRITS',\n    image: 'https://picsum.photos/id/1027/400/200',\n    baseFloorPrice: 750,\n    baseVolume24h: 19800,\n    owners: 6234,\n    totalSupply: 10000,\n    description: 'Ethereal beings native to the Monad dimension',\n    contractAddress: '0x1357...spirits',\n    createdAt: '2024-01-05',\n    royalties: 300\n  },\n  {\n    id: 'monad-genesis',\n    name: 'Monad Genesis',\n    symbol: 'GENESIS',\n    image: 'https://picsum.photos/id/1041/400/200',\n    baseFloorPrice: 5500,\n    baseVolume24h: 89000,\n    owners: 999,\n    totalSupply: 1000,\n    description: 'The original founders collection on Monad',\n    contractAddress: '0x2468...genesis',\n    createdAt: '2024-01-01',\n    royalties: 500\n  }\n];\n\n// Simulate real-time price fluctuations\nconst simulateRealTimeData = (collection) => {\n  const timeVariation = Math.sin(Date.now() / 100000) * 0.1;\n  const randomVariation = (Math.random() - 0.5) * 0.2;\n  const totalVariation = timeVariation + randomVariation;\n  \n  return {\n    ...collection,\n    floorPrice: Math.max(collection.baseFloorPrice * (1 + totalVariation), collection.baseFloorPrice * 0.5),\n    volume24h: Math.max(collection.baseVolume24h * (1 + totalVariation * 0.5), 0),\n    change24h: totalVariation * 100\n  };\n};\n\n// Monad API service\nexport const monadAPI = {\n  async getCollections() {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    try {\n      return {\n        collections: monadCollections.map(simulateRealTimeData),\n        success: true\n      };\n    } catch (error) {\n      console.error('Monad API error:', error);\n      return { collections: monadCollections, success: false };\n    }\n  },\n\n  async getMonadPrice() {\n    // Simulate MON token price with realistic fluctuation\n    const basePrice = 12.50;\n    const variation = Math.sin(Date.now() / 200000) * 2 + (Math.random() - 0.5) * 1;\n    return Math.max(basePrice + variation, 8);\n  },\n\n  async getCollectionActivity(collectionId) {\n    // Simulate recent activity\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const activities = [];\n    for (let i = 0; i < 10; i++) {\n      const types = ['sale', 'transfer', 'listing'];\n      const type = types[Math.floor(Math.random() * types.length)];\n      \n      activities.push({\n        id: `activity-${i}`,\n        type,\n        price: type === 'sale' ? {\n          amount: { decimal: (Math.random() * 5000 + 500).toFixed(0) }\n        } : null,\n        timestamp: new Date(Date.now() - Math.random() * 86400000).toISOString(),\n        from: `0x${Math.random().toString(16).substr(2, 8)}`,\n        to: `0x${Math.random().toString(16).substr(2, 8)}`\n      });\n    }\n    \n    return { activities };\n  },\n\n  async getNetworkStats() {\n    return {\n      blockHeight: 1234567 + Math.floor(Date.now() / 1000),\n      tps: 10000 + Math.floor(Math.random() * 2000),\n      gasPrice: 0.001,\n      activeValidators: 100\n    };\n  }\n};\n\nexport { monadCollections as fallbackCollections };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}